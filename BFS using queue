// Level Order Traversal using queue;

import java.util.*;
class Node{
    int data;
    Node left,right;
    Node(int data){
        this.data=data;
    }
}
public class Main{
    Node root;
    public void levelorder(){
        Queue<Node> q=new LinkedList<>();
       
        q.add(root);
        while(!q.isEmpty()){
            Node curr=q.remove();
            System.out.println(curr.data);
            if(curr.left!=null)
            q.add(curr.left);
            if(curr.right!=null)
            q.add(curr.right);
        }
    }
    public static void main(String args[]){
        Main obj=new Main();
        obj.root=new Node(10);
	    obj.root.left=new Node(20);
	    obj.root.right=new Node(30);
	    obj.root.left.left=new Node(40);
	    obj.root.left.right=new Node(50);
	    obj.root.right.left=new Node(60);
	    obj.root.right.right=new Node(70);
	    obj.levelorder();
    }
}
